/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: msg.proto */

#ifndef PROTOBUF_C_msg_2eproto__INCLUDED
#define PROTOBUF_C_msg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000000 < PROTOBUF_C_VERSION_NUMBER
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SubMsg SubMsg;
typedef struct _MainMsg MainMsg;


/* --- enums --- */


/* --- messages --- */

struct  _SubMsg
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_age;
  int32_t age;
  size_t n_array;
  int32_t *array;
};
#define SUB_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sub_msg__descriptor) \
    , NULL, 0,0, 0,NULL }


struct  _MainMsg
{
  ProtobufCMessage base;
  SubMsg *req_sub;
  SubMsg *opt_sub;
  size_t n_rep_sub;
  SubMsg **rep_sub;
};
#define MAIN_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main_msg__descriptor) \
    , NULL, NULL, 0,NULL }


/* SubMsg methods */
void   sub_msg__init
                     (SubMsg         *message);
size_t sub_msg__get_packed_size
                     (const SubMsg   *message);
size_t sub_msg__pack
                     (const SubMsg   *message,
                      uint8_t             *out);
size_t sub_msg__pack_to_buffer
                     (const SubMsg   *message,
                      ProtobufCBuffer     *buffer);
SubMsg *
       sub_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sub_msg__free_unpacked
                     (SubMsg *message,
                      ProtobufCAllocator *allocator);
/* MainMsg methods */
void   main_msg__init
                     (MainMsg         *message);
size_t main_msg__get_packed_size
                     (const MainMsg   *message);
size_t main_msg__pack
                     (const MainMsg   *message,
                      uint8_t             *out);
size_t main_msg__pack_to_buffer
                     (const MainMsg   *message,
                      ProtobufCBuffer     *buffer);
MainMsg *
       main_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main_msg__free_unpacked
                     (MainMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SubMsg_Closure)
                 (const SubMsg *message,
                  void *closure_data);
typedef void (*MainMsg_Closure)
                 (const MainMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sub_msg__descriptor;
extern const ProtobufCMessageDescriptor main_msg__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_msg_2eproto__INCLUDED */
